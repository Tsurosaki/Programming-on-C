#include <stdio.h>

// Рекурсивная функция для ввода числа
int inputNumber() {
    char c = getchar();
    if(c == ' ' || c == '\n') return 0;
    return (c - '0') + inputNumber() * 10;
}

// Рекурсивная функция для подсчета цифр
int countDigits(int n, int count) {
    if(n < 10) return count + 1;
    return countDigits(n / 10, count + 1);
}

// Вывод цифр в прямом порядке с нулями
void printForward(int n, int totalDigits, int currentPos) {
    if(currentPos >= totalDigits) return;
    
    if(n < 1 && currentPos < totalDigits - countDigits(n, 0)) {
        printf("0 ");
        printForward(n, totalDigits, currentPos + 1);
    } else {
        int divisor = 1;
        for(int i = 0; i < totalDigits - currentPos - 1; i++) divisor *= 10;
        printf("%d ", (n / divisor) % 10);
        printForward(n, totalDigits, currentPos + 1);
    }
}

// Вывод цифр в обратном порядке с нулями
void printBackward(int n, int totalDigits, int currentPos) {
    if(currentPos >= totalDigits) return;
    
    if(n > 0) {
        printf("%d ", n % 10);
        printBackward(n / 10, totalDigits, currentPos + 1);
    } else {
        printf("0 ");
        printBackward(n, totalDigits, currentPos + 1);
    }
}

int main() {
    printf("Введите число: ");
    int N = inputNumber();
    
    printf("Введите количество нулей: ");
    int zeros = inputNumber();
    
    int numDigits = countDigits(N, 0);
    int totalDigits = numDigits + zeros;
    
    printf("\nПрямой порядок: ");
    printForward(N, totalDigits, 0);
    
    printf("\nОбратный порядок: ");
    printBackward(N, totalDigits, 0);
    
    printf("\n");
    return 0;
}
